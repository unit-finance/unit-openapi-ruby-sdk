=begin
#Unit OpenAPI specifications

#An OpenAPI specifications for unit-sdk clients

The version of the OpenAPI document: 0.0.2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'cgi'

module OpenapiClient
  class GetApplicationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get Application by Id
    # Get an Application from API 
    # @param application_id [String] ID of the application to get
    # @param [Hash] opts the optional parameters
    # @option opts [String] :included 
    # @return [UnitApplicationResponseWithIncluded]
    def execute(application_id, opts = {})
      data, _status_code, _headers = execute_with_http_info(application_id, opts)
      data
    end

    # Get Application by Id
    # Get an Application from API 
    # @param application_id [String] ID of the application to get
    # @param [Hash] opts the optional parameters
    # @option opts [String] :included 
    # @return [Array<(UnitApplicationResponseWithIncluded, Integer, Hash)>] UnitApplicationResponseWithIncluded data, response status code and response headers
    def execute_with_http_info(application_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: GetApplicationApi.execute ...'
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling GetApplicationApi.execute"
      end
      # resource path
      local_var_path = '/applications/{applicationId}'.sub('{' + 'applicationId' + '}', CGI.escape(application_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'included'] = opts[:'included'] if !opts[:'included'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json; charset=utf-8'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'UnitApplicationResponseWithIncluded'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"GetApplicationApi.execute",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GetApplicationApi#execute\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
