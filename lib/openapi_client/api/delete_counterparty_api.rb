=begin
#Unit OpenAPI specifications

#An OpenAPI specifications for unit-sdk clients

The version of the OpenAPI document: 0.0.2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'cgi'

module OpenapiClient
  class DeleteCounterpartyApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Delete Counterparty by Id
    # Delete Counterparty via API 
    # @param counterparty_id [String] ID of the counterparty to delete
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def execute(counterparty_id, opts = {})
      execute_with_http_info(counterparty_id, opts)
      nil
    end

    # Delete Counterparty by Id
    # Delete Counterparty via API 
    # @param counterparty_id [String] ID of the counterparty to delete
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def execute_with_http_info(counterparty_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeleteCounterpartyApi.execute ...'
      end
      # verify the required parameter 'counterparty_id' is set
      if @api_client.config.client_side_validation && counterparty_id.nil?
        fail ArgumentError, "Missing the required parameter 'counterparty_id' when calling DeleteCounterpartyApi.execute"
      end
      # resource path
      local_var_path = '/counterparties/{counterpartyId}'.sub('{' + 'counterpartyId' + '}', CGI.escape(counterparty_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"DeleteCounterpartyApi.execute",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeleteCounterpartyApi#execute\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
