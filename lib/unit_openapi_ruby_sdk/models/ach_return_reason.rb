=begin
#Unit OpenAPI specifications

#An OpenAPI specifications for unit-sdk clients

The version of the OpenAPI document: 0.2.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'date'
require 'time'

module UnitOpenapiRubySdk
  class AchReturnReason
    INSUFFICIENT_FUNDS = "InsufficientFunds".freeze
    ACCOUNT_CLOSED = "AccountClosed".freeze
    NO_ACCOUNT = "NoAccount".freeze
    INVALID_ACCOUNT_NUMBER_STRUCTURE = "InvalidAccountNumberStructure".freeze
    UNAUTHORIZED_DEBIT_TO_CONSUMER = "UnauthorizedDebitToConsumer".freeze
    RETURNED_PER_ODFI_REQUEST = "ReturnedPerOdfiRequest".freeze
    AUTHORIZATION_REVOKED_BY_CUSTOMER = "AuthorizationRevokedByCustomer".freeze
    PAYMENT_STOPPED = "PaymentStopped".freeze
    UNCOLLECTED_FUNDS = "UncollectedFunds".freeze
    CUSTOMER_ADVISES_NOT_AUTHORIZED = "CustomerAdvisesNotAuthorized".freeze
    CHECK_TRUNCATION_ENTRY_RETURNED = "CheckTruncationEntryReturned".freeze
    BRANCH_SOLD_TO_ANOTHER_DFI = "BranchSoldToAnotherDfi".freeze
    RDFI_NOT_QUALIFIED_TO_PARTICIPATE = "RdfiNotQualifiedToParticipate".freeze
    REPRESENTATIVE_PAYEE_DECEASED_OR_UNABLE_TO_CONTINUE = "RepresentativePayeeDeceasedOrUnableToContinue".freeze
    BENEFICIARY_OR_BANK_ACCOUNT_HOLDER_DECEASED = "BeneficiaryOrBankAccountHolderDeceased".freeze
    ACCOUNT_FROZEN = "AccountFrozen".freeze
    FILE_RECORD_EDIT_CRITERIA = "FileRecordEditCriteria".freeze
    IMPROPER_EFFECTIVE_ENTRY_DATE = "ImproperEffectiveEntryDate".freeze
    AMOUNT_FIELD_ERROR = "AmountFieldError".freeze
    NON_TRANSACTION_ACCOUNT = "NonTransactionAccount".freeze
    INVALID_COMPANY_IDENTIFICATION = "InvalidCompanyIdentification".freeze
    INVALID_INDIVIDUAL_ID_NUMBER = "InvalidIndividualIdNumber".freeze
    CREDIT_ENTRY_REFUSED_BY_RECEIVER = "CreditEntryRefusedByReceiver".freeze
    DUPLICATE_ENTRY = "DuplicateEntry".freeze
    ADDENDA_ERROR = "AddendaError".freeze
    MANDATORY_FIELD_ERROR = "MandatoryFieldError".freeze
    TRACE_NUMBER_ERROR = "TraceNumberError".freeze
    ROUTING_NUMBER_CHECK_DIGIT_ERROR = "RoutingNumberCheckDigitError".freeze
    CORPORATE_CUSTOMER_ADVISES_NOT_AUTHORIZED = "CorporateCustomerAdvisesNotAuthorized".freeze
    RDFI_NOT_PARTICIPANT_IN_CHECK_TRUNCATION_PROGRAM = "RdfiNotParticipantInCheckTruncationProgram".freeze
    PERMISSIBLE_RETURN_ENTRY = "PermissibleReturnEntry".freeze
    RDFI_NON_SETTLEMENT = "RdfiNonSettlement".freeze
    RETURN_OF_XCK_ENTRY = "ReturnOfXckEntry".freeze
    LIMITED_PARTICIPATION_DFI = "LimitedParticipationDfi".freeze
    RETURN_OF_IMPROPER_DEBIT_ENTRY = "ReturnOfImproperDebitEntry".freeze
    RETURN_OF_IMPROPER_CREDIT_ENTRY = "ReturnOfImproperCreditEntry".freeze
    SOURCE_DOCUMENT_PRESENTED_FOR_PAYMENT = "SourceDocumentPresentedForPayment".freeze
    STOP_PAYMENT_ON_SOURCE_DOCUMENT = "StopPaymentOnSourceDocument".freeze
    IMPROPER_SOURCE_DOCUMENT = "ImproperSourceDocument".freeze
    INVALID_INDIVIDUAL_OR_COMPANY_NAME = "InvalidIndividualOrCompanyName".freeze
    INCORRECTLY_CODED_OUTBOUND_INTERNATIONAL_PAYMENT = "IncorrectlyCodedOutboundInternationalPayment".freeze

    def self.all_vars
      @all_vars ||= [INSUFFICIENT_FUNDS, ACCOUNT_CLOSED, NO_ACCOUNT, INVALID_ACCOUNT_NUMBER_STRUCTURE, UNAUTHORIZED_DEBIT_TO_CONSUMER, RETURNED_PER_ODFI_REQUEST, AUTHORIZATION_REVOKED_BY_CUSTOMER, PAYMENT_STOPPED, UNCOLLECTED_FUNDS, CUSTOMER_ADVISES_NOT_AUTHORIZED, CHECK_TRUNCATION_ENTRY_RETURNED, BRANCH_SOLD_TO_ANOTHER_DFI, RDFI_NOT_QUALIFIED_TO_PARTICIPATE, REPRESENTATIVE_PAYEE_DECEASED_OR_UNABLE_TO_CONTINUE, BENEFICIARY_OR_BANK_ACCOUNT_HOLDER_DECEASED, ACCOUNT_FROZEN, FILE_RECORD_EDIT_CRITERIA, IMPROPER_EFFECTIVE_ENTRY_DATE, AMOUNT_FIELD_ERROR, NON_TRANSACTION_ACCOUNT, INVALID_COMPANY_IDENTIFICATION, INVALID_INDIVIDUAL_ID_NUMBER, CREDIT_ENTRY_REFUSED_BY_RECEIVER, DUPLICATE_ENTRY, ADDENDA_ERROR, MANDATORY_FIELD_ERROR, TRACE_NUMBER_ERROR, ROUTING_NUMBER_CHECK_DIGIT_ERROR, CORPORATE_CUSTOMER_ADVISES_NOT_AUTHORIZED, RDFI_NOT_PARTICIPANT_IN_CHECK_TRUNCATION_PROGRAM, PERMISSIBLE_RETURN_ENTRY, RDFI_NON_SETTLEMENT, RETURN_OF_XCK_ENTRY, LIMITED_PARTICIPATION_DFI, RETURN_OF_IMPROPER_DEBIT_ENTRY, RETURN_OF_IMPROPER_CREDIT_ENTRY, SOURCE_DOCUMENT_PRESENTED_FOR_PAYMENT, STOP_PAYMENT_ON_SOURCE_DOCUMENT, IMPROPER_SOURCE_DOCUMENT, INVALID_INDIVIDUAL_OR_COMPANY_NAME, INCORRECTLY_CODED_OUTBOUND_INTERNATIONAL_PAYMENT].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if AchReturnReason.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #AchReturnReason"
    end
  end
end
