=begin
#Unit OpenAPI specifications

#An OpenAPI specifications for unit-sdk clients

The version of the OpenAPI document: 0.0.2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for OpenapiClient::CreateCustomerTokenVerificationAttributes
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe OpenapiClient::CreateCustomerTokenVerificationAttributes do
  let(:instance) { OpenapiClient::CreateCustomerTokenVerificationAttributes.new }

  describe 'test an instance of CreateCustomerTokenVerificationAttributes' do
    it 'should create an instance of CreateCustomerTokenVerificationAttributes' do
      expect(instance).to be_instance_of(OpenapiClient::CreateCustomerTokenVerificationAttributes)
    end
  end
  describe 'test attribute "channel"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["sms", "call"])
      # validator.allowable_values.each do |value|
      #   expect { instance.channel = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "phone"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "app_hash"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "language"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["en", "af", "ar", "ca", "zh", "zh-CN", "zh-HK", "hr", "cs", "da", "nl", "en-GB", "et", "fi", "fr", "de", "el", "he", "hi", "hu", "id", "it", "ja", "kn", "ko", "ms", "mr", "nb", "pl", "pt-BR", "pt", "ro", "ru", "sk", "es", "sv", "tl", "te", "th", "tr", "vi"])
      # validator.allowable_values.each do |value|
      #   expect { instance.language = value }.not_to raise_error
      # end
    end
  end

end
