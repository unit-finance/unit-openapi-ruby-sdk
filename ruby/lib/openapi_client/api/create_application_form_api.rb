=begin
#Unit OpenAPI specifications

#An OpenAPI specifications for unit-sdk clients

The version of the OpenAPI document: 0.0.2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'cgi'

module OpenapiClient
  class CreateApplicationFormApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create Application Form
    # Create an Application Form via API 
    # @param create_application_form [CreateApplicationForm] Create Application Form Request
    # @param [Hash] opts the optional parameters
    # @return [UnitApplicationFormResponse]
    def execute(create_application_form, opts = {})
      data, _status_code, _headers = execute_with_http_info(create_application_form, opts)
      data
    end

    # Create Application Form
    # Create an Application Form via API 
    # @param create_application_form [CreateApplicationForm] Create Application Form Request
    # @param [Hash] opts the optional parameters
    # @return [Array<(UnitApplicationFormResponse, Integer, Hash)>] UnitApplicationFormResponse data, response status code and response headers
    def execute_with_http_info(create_application_form, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CreateApplicationFormApi.execute ...'
      end
      # verify the required parameter 'create_application_form' is set
      if @api_client.config.client_side_validation && create_application_form.nil?
        fail ArgumentError, "Missing the required parameter 'create_application_form' when calling CreateApplicationFormApi.execute"
      end
      # resource path
      local_var_path = '/application-forms'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/vnd.api+json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(create_application_form)

      # return_type
      return_type = opts[:debug_return_type] || 'UnitApplicationFormResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"CreateApplicationFormApi.execute",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CreateApplicationFormApi#execute\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
